#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: "3.6"

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}
  zookeeper_data: {}
  zookeeper_datalog: {}

networks:
  druid_net:
    attachable: true

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - metadata_data:/druid/data/postgres
    environment:
       PGDATA: /druid/data/postgres
       POSTGRES_PASSWORD: va~;!2d4^&YLe;5#
       POSTGRES_USER: druid
       POSTGRES_DB: druid
    expose:
      - "5442"
    command: -p 5442
    restart: unless-stopped
    networks:
      - druid_net
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
       

  # Need 3.5 or later for container nodes
  #zookeeper:
  #  container_name: druid-zookeeper
  #  image: zookeeper:3.5
  #  hostname: zookeeper
  #  expose:
  #    - "2181"
  #  environment:
  #    - ZOO_MY_ID=1
  #  restart: unless-stopped
  #  volumes:
  #    - zookeeper_data:/data
  #    - zookeeper_datalog:/datalog
    #networks:
    #  - druid_net
    #deploy:
    #  mode: global
    #  restart_policy:
    #    condition: on-failure
       
  zookeeper1:
    image: zookeeper:latest
    hostname: zookeeper1
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog
    networks:
      - druid_net
    ports:
      - 2181:2181
    environment:
      - ZOO_MY_ID=1
      #ZOO_SERVERS: server.1=0.0.0.0:2888:3888
      ZOOKEEPER_CLIENT_PORT: 2181
    deploy:                 
      replicas: 1                 
      placement:                                                                                         
        constraints: [node.hostname == server3.ianic.gr]                                                                                      
      restart_policy:                                
        condition: on-failure

  coordinator:
    image: apache/druid:0.22.0
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
    depends_on: 
      - zookeeper1
      - postgres
    expose:
      - "8081"
    command:
      - coordinator
    env_file:
      - environment
    restart: unless-stopped
    networks:
      - druid_net
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
       

  broker:
    image: apache/druid:0.22.0
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on: 
      - zookeeper1
      - postgres
      - coordinator
    expose:
      - "8082"
    command:
      - broker
    env_file:
      - environment
    restart: unless-stopped
    networks:
      - druid_net
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      

  historical:
    image: apache/druid:0.22.0
    container_name: historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
    depends_on: 
      - zookeeper1
      - postgres
      - coordinator
    expose:
      - "8083"
    command:
      - historical
    env_file:
      - environment
    restart: unless-stopped
    networks:
      - druid_net
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      

  middlemanager:
    image: apache/druid:0.22.0
    container_name: middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
    depends_on: 
      - zookeeper1
      - postgres
      - coordinator
    expose:
      - "8091"
      - "8100-8105"
    command:
      - middleManager
    env_file:
      - environment
    restart: unless-stopped
    networks:
      - druid_net
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      

  router:
    image: apache/druid:0.22.0
    container_name: router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - zookeeper1
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - environment
    restart: unless-stopped
    networks:
      - druid_net
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      
    
